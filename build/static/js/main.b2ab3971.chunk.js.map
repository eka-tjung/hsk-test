{"version":3,"sources":["component/renderHsk.tsx","App.tsx","index.tsx"],"names":["RenderHSK","_React$Component","props","_this","_classCallCheck","this","_possibleConstructorReturn","_getPrototypeOf","call","state","simplified","traditional","pinyin","meaning","index","alignment","hsk","hsk1","slice","speech","changePinyin","setState","_objectSpread","changeSimplified","changeTraditional","changeMeaning","incrementIndex","newIdx","length","decrementIndex","randomize","shuffleHSK","array","sort","Math","random","getHsk","aligment","hsk2","hsk3","hsk4","hsk5","hsk6","hsk789","handleHskChange","event","newAlignment","handleSpeak","speak","text","Speech","init","volume","lang","rate","pitch","splitSentences","listeners","onvoiceschanged","voices","console","log","_inherits","_createClass","key","value","hskItem","React","createElement","Container","maxWidth","style","marginTop","ToggleButtonGroup","color","exclusive","onChange","aria-label","ToggleButton","IconButton","onClick","VolumeUp","FormGroup","sx","position","flexDirection","justifyContent","alignItems","FormControlLabel","control","Switch","defaultChecked","label","Grid","container","item","xs","Typography","variant","align","gutterBottom","concat","paragraph","spacing","Button","disabled","Component","App","Fragment","CssBaseline","AppBar","Toolbar","PhotoCamera","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.b2ab3971.chunk.js","sourcesContent":["import { Button, Container, FormControlLabel, FormGroup, Grid, IconButton, Switch, ToggleButton, ToggleButtonGroup, Typography } from '@mui/material';\nimport React from 'react';\nimport Speech from 'speak-tts';\nimport hsk1 from '../assets/new-hsk1.json';\nimport hsk2 from '../assets/new-hsk2.json';\nimport hsk3 from '../assets/new-hsk3.json';\nimport hsk4 from '../assets/new-hsk4.json';\nimport hsk5 from '../assets/new-hsk5.json';\nimport hsk6 from '../assets/new-hsk6.json';\nimport hsk789 from '../assets/new-hsk7-9.json';\nimport { VolumeUp } from '@mui/icons-material';\n\ntype hskModel = {\n    simplified: string,\n    pinyin: string,\n    meaning: string,\n    traditional?: string,\n}\n\ntype renderHskProps = {\n    hsk: Array<hskModel>;\n}\n\nexport default class RenderHSK extends React.Component<renderHskProps> {\n    state = {\n        simplified: true,\n        traditional: false,\n        pinyin: false,\n        meaning: false,\n        index: 0,\n        alignment: 'hsk1',\n        hsk: hsk1.slice(100,150),\n    }\n    speech;\n\n    constructor(props: renderHskProps) {\n        super(props);\n\n        //        console.log(hsk6.map((item) => item.simplified));\n        this.speech = new Speech();\n\n        this.speech.init({\n            'volume': 1,\n            'lang': 'zh-CN',\n            'rate': 0.7,\n            'pitch': 1,\n            'splitSentences': true,\n            'listeners': {\n                'onvoiceschanged': (voices: any) => {\n                    console.log(\"Event voiceschanged\", voices)\n                }\n            }\n        });\n    }\n    changePinyin = () => {\n        this.setState({ ...this.state, pinyin: !this.state.pinyin });\n    }\n    changeSimplified = () => {\n        this.setState({ ...this.state, simplified: !this.state.simplified });\n    }\n    changeTraditional = () => {\n        this.setState({ ...this.state, traditional: !this.state.traditional });\n    }\n    changeMeaning = () => {\n        this.setState({ ...this.state, meaning: !this.state.meaning });\n    }\n    incrementIndex = () => {\n        let newIdx = this.state.index + 1;\n        if (newIdx > this.state.hsk.length - 1) {\n            newIdx = 0;\n        }\n        this.setState({ ...this.state, index: newIdx });\n    }\n    decrementIndex = () => {\n        let newIdx = this.state.index - 1;\n        if (newIdx < 0) {\n            newIdx = this.state.hsk.length - 1;\n        }\n        this.setState({ ...this.state, index: newIdx });\n    }\n    randomize = () => {\n        this.setState({ ...this.state, index: 0, hsk: this.shuffleHSK(this.state.hsk) })\n    }\n\n    shuffleHSK = (array: Array<hskModel>) => {\n        return array.sort(() => Math.random() - 0.5);\n    }\n\n    getHsk = (aligment: string) => {\n        switch (aligment) {\n            case \"hsk1\":\n                return hsk1;\n            case \"hsk2\":\n                return hsk2;\n            case \"hsk3\":\n                return hsk3;\n            case \"hsk4\":\n                return hsk4;\n            case \"hsk5\":\n                return hsk5;\n            case \"hsk6\":\n                return hsk6;\n            case \"hsk789\":\n                return hsk789;\n            default:\n                return hsk1;\n        }\n    }\n    handleHskChange = (event: any, newAlignment: string) => {\n        if (!newAlignment || newAlignment === this.state.alignment) {\n            return;\n        }\n\n        this.setState({ ...this.state, index: 0, hsk: this.getHsk(newAlignment), alignment: newAlignment })\n    }\n\n    handleSpeak = () => {\n        this.speech.speak({\n            text: this.state.hsk[this.state.index].simplified\n        });\n    }\n\n    render() {\n        const hskItem = this.state.hsk[this.state.index];\n        return (\n            <Container maxWidth=\"sm\" style={{ marginTop: '10px' }}>\n                <div>\n                    <ToggleButtonGroup\n                        color=\"primary\"\n                        value={this.state.alignment}\n                        exclusive\n                        onChange={this.handleHskChange}\n                        aria-label=\"Platform\"\n                    >\n                        <ToggleButton value=\"hsk1\">HSK 1</ToggleButton>\n                        <ToggleButton value=\"hsk2\">HSK 2</ToggleButton>\n                        <ToggleButton value=\"hsk3\">HSK 3</ToggleButton>\n                        <ToggleButton value=\"hsk4\">HSK 4</ToggleButton>\n                        <ToggleButton value=\"hsk5\">HSK 5</ToggleButton>\n                        <ToggleButton value=\"hsk6\">HSK 6</ToggleButton>\n                        <ToggleButton value=\"hsk789\">HSK 7,8,9</ToggleButton>\n                    </ToggleButtonGroup>\n\n                    <IconButton aria-label=\"speak\" onClick={this.handleSpeak}>\n                        <VolumeUp />\n                    </IconButton>\n                </div>\n                <div>\n                    <FormGroup sx={{ position: 'flex', flexDirection: 'row', justifyContent: 'center', alignItems: 'center' }}>\n                        <FormControlLabel control={<Switch defaultChecked onClick={this.changeSimplified} />} label=\"Chinese\" />\n                        <FormControlLabel control={<Switch onClick={this.changeTraditional} />} label=\"Traditional\" />\n                        <FormControlLabel control={<Switch onClick={this.changePinyin} />} label=\"Pinyin\" />\n                        <FormControlLabel control={<Switch onClick={this.changeMeaning} />} label=\"Meaning\" />\n                    </FormGroup>\n                </div>\n                <div>\n                    <Grid container style={{ marginTop: '10px' }}>\n                        <Grid item xs={6}>\n                            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" gutterBottom>Simplified</Typography>\n                            <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                                {this.state.simplified ? hskItem.simplified : \"\"}\n                            </Typography>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <Typography variant=\"h5\" align=\"center\" color=\"textSecondary\" gutterBottom>Traditional</Typography>\n                            <Typography variant=\"h2\" align=\"center\" color=\"textPrimary\" gutterBottom>\n                                {this.state.traditional ? hskItem.traditional : \"\"}\n                            </Typography>\n                        </Grid>\n                    </Grid>\n                    <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" gutterBottom>\n                        {`${this.state.index+1} out of ${this.state.hsk.length}`}\n                    </Typography>\n                    <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" gutterBottom>\n                        {this.state.pinyin ? hskItem.pinyin : \"Pinyin Disabled\"}\n                    </Typography>\n                    <Typography variant=\"h6\" align=\"center\" color=\"textSecondary\" paragraph>\n                        {this.state.meaning ? hskItem.meaning : \"Meaning Disabled\"}\n                    </Typography>\n                </div>\n                <div>\n                    <Grid container spacing={2} justifyContent=\"center\">\n                        <Grid item>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.randomize}>\n                                Randomize\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.decrementIndex} disabled={this.state.index == 0}>\n                                Previous\n                            </Button>\n                        </Grid>\n                        <Grid item>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.incrementIndex} disabled={this.state.index == this.state.hsk.length - 1}>\n                                Next\n                            </Button>\n                        </Grid>\n                    </Grid>\n                </div>\n            </Container>\n        );\n    }\n}","import React from 'react';\nimport {\n    Typography,\n    AppBar,\n    CssBaseline,\n    Toolbar,\n} from '@mui/material';\nimport { PhotoCamera } from '@mui/icons-material';\nimport RenderHSK from './component/renderHsk';\nimport hsk1 from './assets/hsk1.json';\n\nconst App = () => {\n    return (\n        <>\n            <CssBaseline />\n            <AppBar position=\"relative\">\n                <Toolbar>\n                    <PhotoCamera />\n                    <Typography variant=\"h6\">\n                        HSK Tool\n                    </Typography>\n                </Toolbar>\n            </AppBar>\n            <main>\n                <div>\n                    <RenderHSK hsk={hsk1} />\n                </div>\n            </main>\n        </>\n    )\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst root = ReactDOM.createRoot(\n  document.getElementById('root') as HTMLElement\n);\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n"],"sourceRoot":""}